<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.healthvision</groupId>
    <artifactId>ml-pipeline</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>HealthVision ML Pipeline</name>
    <description>Machine learning pipeline for HealthVision project</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <google.cloud.storage.version>2.20.1</google.cloud.storage.version>
        <google.cloud.functions.version>1.1.0</google.cloud.functions.version>
        <gson.version>2.10.1</gson.version>
        <weka.version>3.8.6</weka.version>
        <junit.version>5.9.2</junit.version>
        <function.name>healthvision-predictor</function.name>
        <gcp.project.id>healthvision-ml-dev</gcp.project.id>
        <gcp.region>us-central1</gcp.region>
        <function.runtime>java11</function.runtime>
    </properties>

    <dependencies>
        <!-- Google Cloud Storage -->
        <dependency>
            <groupId>com.google.cloud</groupId>
            <artifactId>google-cloud-storage</artifactId>
            <version>${google.cloud.storage.version}</version>
        </dependency>

        <!-- Google Cloud Functions -->
        <dependency>
            <groupId>com.google.cloud.functions</groupId>
            <artifactId>functions-framework-api</artifactId>
            <version>${google.cloud.functions.version}</version>
        </dependency>

        <!-- GSON for JSON processing -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson.version}</version>
        </dependency>

        <!-- WEKA Machine Learning -->
        <dependency>
            <groupId>nz.ac.waikato.cms.weka</groupId>
            <artifactId>weka-stable</artifactId>
            <version>${weka.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.github.fracpete</groupId>
                    <artifactId>java-cup-runtime</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>nz.ac.waikato.cms.weka</groupId>
                    <artifactId>thirdparty</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <compilerArgs>
                        <arg>-parameters</arg>
                    </compilerArgs>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.1.2</version>
                <configuration>
                    <useSystemClassLoader>false</useSystemClassLoader>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.google.cloud.functions</groupId>
                <artifactId>function-maven-plugin</artifactId>
                <version>0.11.0</version>
                <configuration>
                    <functionTarget>com.healthvision.ml.PredictionFunction</functionTarget>
                    <name>${function.name}</name>
                    <projectId>${gcp.project.id}</projectId>
                    <region>${gcp.region}</region>
                    <entryPoint>com.healthvision.ml.PredictionFunction</entryPoint>
                    <runtime>${function.runtime}</runtime>
                    <memory>512MB</memory>
                    <timeout>60s</timeout>
                    <trigger-http>true</trigger-http>
                    <envVars>
                        <GCP_PROJECT>${gcp.project.id}</GCP_PROJECT>
                    </envVars>
                </configuration>
                <executions>
                    <execution>
                        <id>generate-deployment</id>
                        <phase>package</phase>
                        <goals>
                            <goal>function</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.5.0</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>com.healthvision.ml.PredictionFunction</mainClass>
                                </transformer>
                            </transformers>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Added to ensure deployment directory is created -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <mkdir dir="${project.build.directory}/deployment"/>
                                <copy file="${project.build.directory}/${project.build.finalName}.jar" 
                                      tofile="${project.build.directory}/deployment/function.jar"/>
                                <echo file="${project.build.directory}/deployment/function.yaml"
                                      message="runtime: java11${line.separator}entryPoint: com.healthvision.ml.PredictionFunction"/>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>